pipeline {

  agent none

  environment {
    DOCKER_IMAGE = "hieubossgr/jenkins-docker-php"
  }

  stages {
    stage("Test") {
      agent { label 'master'}
      steps {
	sh "echo 'Hello world'"
      }
    }

    stage("Build PHP") {
      agent {
        docker {
          image 'allebb/phptestrunner-73:latest'
          args '-u root:sudo'
        }
      }
      steps {
        echo 'Running PHP 7.3 tests...'
        sh 'php -v'
        echo 'Installing Composer'
        sh 'curl -sS https://getcomposer.org/installer | php '
        echo 'movie composer.phar to /usr/local/bin/composer'
        sh 'mv composer.phar /usr/local/bin/composer'
	echo 'Install phpunit'
	sh 'cd $WORKSPACE && composer require --dev phpunit/phpunit'
        echo 'Running PHPUnit tests...'
        sh '$WORKSPACE/vendor/bin/phpunit automation-test/tests'
      }
    }

    stage("build") {
      agent { label 'master'}
      environment {
        DOCKER_TAG="${GIT_BRANCH.tokenize('/').pop()}-${GIT_COMMIT.substring(0,7)}"
      }
      steps {
        sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} . "
        sh "docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest"
        sh "docker image ls | grep ${DOCKER_IMAGE}"
        withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
            sh 'echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin'
            sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
            sh "docker push ${DOCKER_IMAGE}:latest"
        }
[O

        //clean to save disk
        sh "docker image rm ${DOCKER_IMAGE}:${DOCKER_TAG}"
        sh "docker image rm ${DOCKER_IMAGE}:latest"
      }
    }
  }

  post {
    success {
      echo "SUCCESSFUL"
    }
    failure {
      echo "FAILED"
    }
  }
}
